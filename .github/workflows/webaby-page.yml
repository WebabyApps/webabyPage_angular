name: webaby-page runner (NEW on domain)

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

# (opcjonalnie) blokuje równoległe deploye do prod
concurrency:
  group: webaby-page-prod
  cancel-in-progress: true

jobs:
  build-deploy:
    # nowy self-hosted runner, który dodałeś w tym repo
    runs-on: self-hosted
    timeout-minutes: 60

    env:
      # ŚCIEŻKA docelowa musi odpowiadać rootowi w Nginx:
      DEST_DIR: /home/ubuntu/webaby-page/actions-runner/_work/webabyPage_angular/webabyPage_angular/webaby-page

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Build Angular (production)
        run: npm run build 

      # Ustal, który katalog z dist jest „tym właściwym” (Angular 17+ bywa w dist/*/browser)
      - name: Detect build output dir
        id: outdir
        shell: bash
        run: |
          set -e
          OUT=$(ls -d dist/*/browser 2>/dev/null || ls -d dist/*)
          echo "BUILD_OUT=$OUT" >> $GITHUB_ENV
          echo "Build output: $OUT"

      # (opcjonalnie) jeżeli kiedyś dołożysz PWA z innego repo pod /basketball-pwa, odkomentuj i dostosuj:
      # - uses: actions/checkout@v4
      #   with:
      #     repository: maciejmar/basketball-game
      #     path: basketball-pwa
      #     # jeśli prywatne: token: ${{ secrets.GH_PAT }}
      # - uses: actions/setup-node@v4
      #   with:
      #     node-version: 20
      #     cache: 'npm'
      #     cache-dependency-path: basketball-pwa/package-lock.json
      # - name: Build PWA (/basketball-pwa)
      #   working-directory: basketball-pwa
      #   run: npx ng build --configuration production --base-href /basketball-pwa/ --deploy-url /basketball-pwa/
      # - name: Copy PWA into site's build
      #   shell: bash
      #   run: |
      #     PWA_DIR=$(ls -d basketball-pwa/dist/*/browser 2>/dev/null || ls -d basketball-pwa/dist/*)
      #     mkdir -p "$BUILD_OUT/basketball-pwa"
      #     rsync -a --delete "$PWA_DIR/" "$BUILD_OUT/basketball-pwa/"

      # --- DEPLOY do workspacu NOWEGO runnera na VPS (tak jak w starej, tylko inna ścieżka) ---
      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          # jeśli klucz ma passphrase:
          # ssh-passphrase: ${{ secrets.SSH_PASSPHRASE }}

      - name: Trust server host key
        run: ssh-keyscan -Hv ${{ secrets.OVH_VPS_IP }} >> ~/.ssh/known_hosts

      # (opcjonalny) szybki ping po SSH — ułatwia diagnozę
      - name: SSH smoke test
        run: ssh -o BatchMode=yes ubuntu@${{ secrets.OVH_VPS_IP }} "echo CONNECTED && hostname"

      - name: Create dest dir
        run: ssh ubuntu@${{ secrets.OVH_VPS_IP }} "mkdir -p '${{ env.DEST_DIR }}'"

      - name: Rsync build → runner workspace
        run: |
          rsync -az --delete "${BUILD_OUT}/" ubuntu@${{ secrets.OVH_VPS_IP }}:"${{ env.DEST_DIR }}/"

      - name: Reload Nginx
        run: ssh ubuntu@${{ secrets.OVH_VPS_IP }} "sudo nginx -t && sudo systemctl reload nginx"